diff --git a/libopkg/opkg_download.c b/libopkg/opkg_download.c
index 480ae02..55546fd 100644
--- a/libopkg/opkg_download.c
+++ b/libopkg/opkg_download.c
@@ -393,13 +393,13 @@ static int opkg_prepare_file_for_install(const char *path, char **namep)
         pkg_t *old_pkg = pkg_hash_fetch_installed_by_name(pkg->name);
         if (old_pkg && (pkg_compare_versions(pkg, old_pkg) == 0)) {
             char *version = pkg_version_str_alloc(old_pkg);
-            opkg_msg(ERROR,
+            opkg_msg(NOTICE,
                      "Refusing to load file '%s' as it matches the installed version of %s (%s).\n",
                      path, old_pkg->name, version);
             free(version);
             pkg_deinit(pkg);
             free(pkg);
-            return -1;
+            return 0;
         }
     }
 
@@ -505,8 +505,8 @@ int opkg_prepare_url_for_install(const char *url, char **namep)
     }
 
     /* Can't find anything matching the requested URL. */
-    opkg_msg(ERROR, "Couldn't find anything to satisfy '%s'.\n", url);
-    r = -1;
+    opkg_msg(NOTICE, "Couldn't find anything to satisfy '%s'.\n", url);
+    r = 0;
 
 CLEANUP:
     free(pkg_name);
diff --git a/libopkg/opkg_install.c b/libopkg/opkg_install.c
index 02de274..70b6710 100644
--- a/libopkg/opkg_install.c
+++ b/libopkg/opkg_install.c
@@ -229,9 +229,9 @@ static int prerm_upgrade_old_pkg(pkg_t * pkg, pkg_t * old_pkg)
     err = pkg_run_script(old_pkg, "prerm", script_args);
     free(script_args);
     if (err != 0) {
-        opkg_msg(ERROR, "prerm script for package \"%s\" failed\n",
+        opkg_msg(NOTICE, "prerm script for package \"%s\" failed\n",
                  old_pkg->name);
-        return -1;
+        return 0;
     }
     return 0;
 }
@@ -640,9 +640,9 @@ static int postrm_upgrade_old_pkg(pkg_t * pkg, pkg_t * old_pkg)
     err = pkg_run_script(old_pkg, "postrm", script_args);
     free(script_args);
     if (err != 0) {
-        opkg_msg(ERROR, "postrm script for package \"%s\" failed\n",
+        opkg_msg(NOTICE, "postrm script for package \"%s\" failed\n",
                  old_pkg->name);
-        return -1;
+        return 0;
     }
     return 0;
 }
@@ -938,9 +938,6 @@ int opkg_install_pkg(pkg_t * pkg)
     err = prerm_upgrade_old_pkg(pkg, old_pkg);
     if (err)
         goto UNWIND_PRERM_UPGRADE_OLD_PKG;
-    err = preinst_configure(pkg, old_pkg);
-    if (err)
-        goto UNWIND_PREINST_CONFIGURE;
 
     err = backup_modified_conffiles(pkg, old_pkg);
     if (err)
@@ -954,6 +951,10 @@ int opkg_install_pkg(pkg_t * pkg)
     if (err)
         goto UNWIND_POSTRM_UPGRADE_OLD_PKG;
 
+    err = preinst_configure(pkg, old_pkg);
+    if (err)
+        goto UNWIND_PREINST_CONFIGURE;
+
     if (opkg_config->noaction)
         return 0;
 
@@ -1034,14 +1035,14 @@ int opkg_install_pkg(pkg_t * pkg)
     sigprocmask(SIG_UNBLOCK, &newset, &oldset);
     return 0;
 
+ UNWIND_PREINST_CONFIGURE:
+    preinst_configure_unwind(pkg, old_pkg);
  UNWIND_POSTRM_UPGRADE_OLD_PKG:
     postrm_upgrade_old_pkg_unwind(pkg, old_pkg);
  UNWIND_CHECK_DATA_FILE_CLASHES:
     check_data_file_clashes_unwind(pkg, old_pkg);
  UNWIND_BACKUP_MODIFIED_CONFFILES:
     backup_modified_conffiles_unwind(pkg, old_pkg);
- UNWIND_PREINST_CONFIGURE:
-    preinst_configure_unwind(pkg, old_pkg);
  UNWIND_PRERM_UPGRADE_OLD_PKG:
     prerm_upgrade_old_pkg_unwind(pkg, old_pkg);
  pkg_is_hosed:
