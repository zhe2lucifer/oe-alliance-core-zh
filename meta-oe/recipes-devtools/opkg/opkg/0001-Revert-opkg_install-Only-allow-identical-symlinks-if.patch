From 123e64187d822f6c371aeb0ca152968260a729c3 Mon Sep 17 00:00:00 2001
From: captain <openatv@gmail.com>
Date: Wed, 27 Dec 2017 21:36:51 +0100
Subject: [PATCH] Revert "opkg_install: Only allow identical symlinks if the
 target is a directory"

This reverts commit a9e32aae67026399d5883007abd89e0bbb429351.

---
 libopkg/opkg_install.c       | 18 +++---------------
 tests/regress/issue11033b.py | 22 +---------------------
 2 files changed, 4 insertions(+), 36 deletions(-)

diff --git a/libopkg/opkg_install.c b/libopkg/opkg_install.c
index 769c67f..39678d4 100644
--- a/libopkg/opkg_install.c
+++ b/libopkg/opkg_install.c
@@ -469,28 +469,16 @@ static int check_data_file_clashes(pkg_t * pkg, pkg_t * old_pkg)
             }
 
             /* OK if both the existing and new are a symlink and point to
-             * the same directory */
+             * the same location */
             if (S_ISLNK(file_info->mode) && file_is_symlink(filename)) {
                 char *link_target;
-                int r, target_is_same_directory = 0;
-                struct stat target_stat;
+                int r;
 
                 link_target = file_readlink_alloc(filename);
                 r = strcmp(link_target, file_info->link_target);
                 free(link_target);
 
-                if (r == 0) {
-                    /* Ensure the target is a directory, not a file.
-                     * NOTE: This requires the directory to exist -- if this
-                     * is a broken symlink, it will be treated as a file and
-                     * be reported as a conflict. */
-                    link_target = realpath(filename, NULL);
-                    if (link_target && xlstat(link_target, &target_stat) == 0)
-                        target_is_same_directory = S_ISDIR(target_stat.st_mode);
-                    free(link_target);
-                }
-
-                if (target_is_same_directory)
+                if (r == 0)
                     continue;
             }
 
diff --git a/tests/regress/issue11033b.py b/tests/regress/issue11033b.py
index f2ae9f7..85bb017 100644
--- a/tests/regress/issue11033b.py
+++ b/tests/regress/issue11033b.py
@@ -10,12 +10,9 @@ o = opk.OpkGroup()
 # Package A creates a symlink
 os.mkdir('lib64')
 os.symlink('lib64', 'lib')
-with open('static_file.txt', 'w') as f:
-    f.write('Test')
 pkg = opk.Opk(Package='a')
-pkg.write(data_files=['lib', 'lib64', 'static_file.txt'])
+pkg.write(data_files=['lib', 'lib64'])
 o.addOpk(pkg)
-os.remove('static_file.txt')
 
 # Package B creates the same symlink
 pkg = opk.Opk(Package='b')
@@ -33,18 +30,6 @@ o.addOpk(pkg)
 os.remove('lib')
 os.rmdir('lib32')
 
-# Package D creates a symlink to a file (but doesn't include the file)
-os.symlink('static_file.txt', 'link.txt')
-pkg = opk.Opk(Package='d')
-pkg.write(data_files=['link.txt'])
-o.addOpk(pkg)
-
-# Package E creates the same file symlink
-pkg = opk.Opk(Package='e')
-pkg.write(data_files=['link.txt'])
-o.addOpk(pkg)
-os.remove('link.txt')
-
 o.write_list()
 
 opkgcl.update()
@@ -57,8 +42,3 @@ if not opkgcl.is_installed('b'):
 opkgcl.install('c')
 if opkgcl.is_installed('c'):
     opk.fail("Package 'c' installed despite symlink conflict")
-
-opkgcl.install('d')
-opkgcl.install('e')
-if opkgcl.is_installed('e'):
-    opk.fail("Package 'e' installed despite symlink conflict")
